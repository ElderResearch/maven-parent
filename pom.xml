<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.elderresearch</groupId>
	<artifactId>eri-maven-base</artifactId>
	<version>4.0.2-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<scm>gitlab.com/ElderResearch</scm>
		<scm.commons>${scm}/toolbox/commons/jvm</scm.commons>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<eri.artifacts.base>https://elderresearch.jfrog.io/elderresearch</eri.artifacts.base>
		<eri.artifacts.releases>${eri.artifacts.base}/libs-release</eri.artifacts.releases>
		<eri.artifacts.snapshots>${eri.artifacts.base}/libs-snapshot</eri.artifacts.snapshots>

		<enunciate.version>2.11.1</enunciate.version>
		<enunciate.disabled>true</enunciate.disabled>
		
		<lombok.version>1.18.10</lombok.version>
		<lombok.delombok.dir>${project.build.directory}/delombok-for-javadoc</lombok.delombok.dir>
		<lombok.src.dir>${project.basedir}/src/main/lombok</lombok.src.dir>
		
		<!-- These are referenced multiple places so are located here to avoid redundancy and allow for convenient
		     change since currently there isn't an "official" version of SWT in central -->
		<swt.groupId>org.eclipse.swt</swt.groupId>
		<swt.artifactId.win>org.eclipse.swt.win32.win32.x86_64</swt.artifactId.win>
		<swt.artifactId.mac>org.eclipse.swt.cocoa.macosx.x86_64</swt.artifactId.mac>
		<swt.artifactId.linux>org.eclipse.swt.gtk.linux.x86_64</swt.artifactId.linux>
	</properties>

	<name>ERI Cross-Project Parent POM</name>

	<modules>
		<module>eri-application-base</module>
		<module>eri-code-metrics</module>
		<module>eri-commons-checkstyle</module>
	</modules>

	<scm>
		<connection>scm:git:git://${scm.commons}/maven.git</connection>
		<developerConnection>scm:git:git://${scm.commons}/maven.git</developerConnection>
		<url>https://${scm.commons}/maven</url>
	  <tag>HEAD</tag>
  </scm>

	<distributionManagement>
		<repository>
			<id>eri-releases</id>
			<url>${eri.artifacts.releases}</url>
		</repository>
		<snapshotRepository>
			<id>eri-snapshots</id>
			<url>${eri.artifacts.snapshots}</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>eri-releases</id>
			<url>${eri.artifacts.releases}</url>
			<releases><enabled>true</enabled></releases>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
		<repository>
			<id>eri-snapshots</id>
			<url>${eri.artifacts.snapshots}</url>
			<releases><enabled>false</enabled></releases>
			<snapshots><enabled>true</enabled></snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>eri-releases</id>
			<url>${eri.artifacts.releases}</url>
			<releases><enabled>true</enabled></releases>
			<snapshots><enabled>false</enabled></snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>eri-snapshots</id>
			<url>${eri.artifacts.snapshots}</url>
			<releases><enabled>false</enabled></releases>
			<snapshots><enabled>true</enabled></snapshots>
		</pluginRepository>
	</pluginRepositories>

	<issueManagement>
		<system>Jira</system>
		<url>https://elderresearch.atlassian.net/jira</url>
	</issueManagement>
	<ciManagement>
		<system>Gitlab CI/CD</system>
		<url>https://gitlab.com/ElderResearch/</url>
	</ciManagement>
	<organization>
		<name>Elder Research</name>
		<url>http://www.elderresearch.com</url>
	</organization>
	<inceptionYear>1995</inceptionYear>

	<dependencies>
		<!-- Always bring in JUnit - test scope won't bloat binaries -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<!-- Always bring in Lombok - provided scope won't bloat binaries (APT only) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Stanardize logging (children can always exclude) -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.11.2</version>
		</dependency>
		<!-- For YAML syntax for config files (much more concise than XML), and Jackson is generally awesome -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.9.8</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.dataformat</groupId>
		    <artifactId>jackson-dataformat-yaml</artifactId>
		    <version>2.9.8</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>${lombok.version}.0</version>
				<executions>
					<execution>
						<id>delombok-main-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
						<configuration>
							<sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
							<addOutputDirectory>false</addOutputDirectory>
							<outputDirectory>${lombok.delombok.dir}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>delombok-other-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
						<configuration>
							<sourceDirectory>${lombok.src.dir}</sourceDirectory>
							<addOutputDirectory>false</addOutputDirectory>
							<outputDirectory>${lombok.delombok.dir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<additionalparam>${javadoc.opts}</additionalparam>
							<sourcepath>${lombok.delombok.dir}</sourcepath>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<optimize>true</optimize>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>install</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<pushChanges>false</pushChanges>
					<localCheckout>true</localCheckout>
					<goals>deploy</goals>
					<useReleaseProfile>false</useReleaseProfile>
					<tagNameFormat>@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<configuration>
							<name>year.current</name>
							<pattern>yyyy</pattern>
							<units>year</units>
						</configuration>
					</execution>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/xjc</source>
								<source>${project.build.directory}/generated-sources/jooq</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>com.webcohesion.enunciate</groupId>
				<artifactId>enunciate-maven-plugin</artifactId>
				<version>${enunciate.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>docs</goal>
						</goals>
						<configuration>
							<docsDir>${project.build.outputDirectory}</docsDir>
							<skipEnunciate>${enunciate.disabled}</skipEnunciate>
							<sources>
								<source>${lombok.delombok.dir}</source>
							</sources>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.webcohesion.enunciate</groupId>
						<artifactId>enunciate-lombok</artifactId>
						<version>${enunciate.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<executions>
					<execution>
						<id>attach-descriptor</id>
						<goals>
							<goal>attach-descriptor</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<generateReports>false</generateReports>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>lt.velykis.maven.skins</groupId>
						<artifactId>reflow-velocity-tools</artifactId>
						<version>1.1.1</version>
					</dependency>
					<dependency>
						<groupId>org.apache.velocity</groupId>
						<artifactId>velocity</artifactId>
						<version>1.7</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.6</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<!-- Some projects contain platform-specific dependencies. They should build separate artifacts for each platform via the module mechanism. However, for 
		development, it is useful to be able to automatically select the correct one based on the developer's operating system. Use these profiles to define the 
		correct value for platform-specific code. It is recommended all properties start with "system" -->
	<profiles>
		<profile>
			<id>host-is-mac</id>
			<activation>
				<os><family>mac</family></os>
			</activation>
			<properties>
				<system.platform>mac</system.platform>
				<system.swt.artifactId>${swt.artifactId.mac}</system.swt.artifactId>
			</properties>
		</profile>
		<profile>
			<id>host-is-win</id>
			<activation>
				<os><family>windows</family></os>
			</activation>
			<properties>
				<system.platform>win</system.platform>
				<system.swt.artifactId>${swt.artifactId.win}</system.swt.artifactId>
			</properties>
		</profile>
		<profile>
			<id>host-is-nix</id>
			<activation>
				<os><family>linux</family></os>
			</activation>
			<properties>
				<system.platform>linux</system.platform>
				<system.swt.artifactId>${swt.artifactId.linux}</system.swt.artifactId>
			</properties>
		</profile>

		<!-- Javadocs now return exit code 1 in JDK8+ which prevents any Maven build from completing unless the Javadocs are perfect -->
		<profile>
			<id>javadoc-doclint-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<javadoc.opts>-Xdoclint:none</javadoc.opts>
			</properties>
		</profile>
	</profiles>
</project>
